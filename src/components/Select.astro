---
import Icon from "@/user-components/Icon.astro";

interface Props {
  label: string;
  value: string;
  icon?: Parameters<typeof Icon>[0]["name"];
  width?: string;
  options: Array<{
    label: string;
    value: string;
    selected: boolean;
  }>;
}

const { label, value, icon, width = "100%", options } = Astro.props;
---

<label style={`--sl-select-width: ${width}`}>
  <span class="sr-only">{label}</span>
  {icon && <Icon name={icon} class="icon label-icon" />}
  <select value={value}>
    {
      options.map(({ value, selected, label }) => (
        <option value={value} selected={selected} set:html={label} />
      ))
    }
  </select>
  <Icon name="down-caret" class:list={["icon", "caret"]} />
</label>

<style>
  .caret {
    font-size: var(--sl-caret-size);
    inset-inline-end: 0;
  }

  label {
    --sl-label-icon-size: 0.875rem;
    --sl-caret-size: 1.25rem;
    --sl-inline-padding: 0.5rem;
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: var(--sl-color-text-1);
  }

  label:hover {
    color: var(--sl-color-text-2);
  }

  .icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .label-icon {
    font-size: var(--sl-label-icon-size);
    inset-inline-start: 0;
  }

  select {
    border: 0;
    padding-block: 0.625rem;
    padding-inline: calc(
        var(--sl-label-icon-size) + var(--sl-inline-padding) + 0.25rem
      )
      calc(var(--sl-caret-size) + var(--sl-inline-padding) + 0.25rem);
    margin-inline: calc(var(--sl-inline-padding) * -1);
    width: calc(var(--sl-select-width) + var(--sl-inline-padding) * 2);
    background-color: transparent;
    text-overflow: ellipsis;
    color: inherit;
    cursor: pointer;
    appearance: none;
  }

  option {
    background-color: var(--function-neutral-200);
    color: var(--color-text);
  }

  @media (min-width: 50rem) {
    select {
      font-size: var(--sl-text-sm);
    }
  }
</style>
